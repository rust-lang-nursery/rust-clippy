warning: in an 'if' condition, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a 'let'
  --> $DIR/block_in_if_condition.rs:30:8
   |
30 |       if {
   |  ________^ starting here...
31 | |         let x = 3;
32 | |         x == 3
33 | |     } {
   | |_____^ ...ending here
   |
   = note: #[warn(block_in_if_condition_stmt)] on by default
   = help: try
           let res = {
               let x = 3;
               x == 3
           };
           if res {
               6
           } ... 

warning: omit braces around single expression condition
  --> $DIR/block_in_if_condition.rs:41:8
   |
41 |     if { true } {
   |        ^^^^^^^^
   |
   = note: #[warn(block_in_if_condition_expr)] on by default
   = help: try
           if true {
               6
           } ... 

warning: in an 'if' condition, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a 'let'
  --> $DIR/block_in_if_condition.rs:58:49
   |
58 |     if v == 3 && sky == "blue" && predicate(|x| { let target = 3; x == target }, v) {
   |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: #[warn(block_in_if_condition_stmt)] on by default

warning: in an 'if' condition, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a 'let'
  --> $DIR/block_in_if_condition.rs:62:22
   |
62 |     if predicate(|x| { let target = 3; x == target }, v) {
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: #[warn(block_in_if_condition_stmt)] on by default

warning: this boolean expression can be simplified
  --> $DIR/block_in_if_condition.rs:70:8
   |
70 |     if true && x == 3 {
   |        ^^^^^^^^^^^^^^
   |
note: lint level defined here
  --> $DIR/block_in_if_condition.rs:7:9
   |
7  | #![warn(nonminimal_bool)]
   |         ^^^^^^^^^^^^^^^
help: try
   |     if x == 3 {

