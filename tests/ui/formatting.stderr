warning: this looks like an `else if` but the `else` is missing
  --> $DIR/formatting.rs:15:6
   |
15 |     } if foo() {
   |      ^
   |
   = note: #[warn(suspicious_else_formatting)] on by default
   = note: to remove this lint, add the missing `else` or add a new line before the second `if`

warning: this looks like an `else if` but the `else` is missing
  --> $DIR/formatting.rs:24:10
   |
24 |         } if foo() {
   |          ^
   |
   = note: #[warn(suspicious_else_formatting)] on by default
   = note: to remove this lint, add the missing `else` or add a new line before the second `if`

warning: this looks like an `else if` but the `else` is missing
  --> $DIR/formatting.rs:34:10
   |
34 |         } if foo() {
   |          ^
   |
   = note: #[warn(suspicious_else_formatting)] on by default
   = note: to remove this lint, add the missing `else` or add a new line before the second `if`

warning: this is an `else if` but the formatting might hide it
  --> $DIR/formatting.rs:45:6
   |
45 |       } else
   |  ______^ starting here...
46 | |
47 | |
48 | |     if foo() { // the span of the above error should continue here
   | |____^ ...ending here
   |
   = note: #[warn(suspicious_else_formatting)] on by default
   = note: to remove this lint, remove the `else` or remove the new line between `else` and `if`

warning: this is an `else if` but the formatting might hide it
  --> $DIR/formatting.rs:52:6
   |
52 |       }
   |  ______^ starting here...
53 | |
54 | |
55 | |     else
56 | |     if foo() { // the span of the above error should continue here
   | |____^ ...ending here
   |
   = note: #[warn(suspicious_else_formatting)] on by default
   = note: to remove this lint, remove the `else` or remove the new line between `else` and `if`

warning: this looks like you are trying to use `.. -= ..`, but you really are doing `.. = (- ..)`
  --> $DIR/formatting.rs:83:6
   |
83 |     a =- 35;
   |      ^^^^
   |
   = note: #[warn(suspicious_assignment_formatting)] on by default
   = note: to remove this lint, use either `-=` or `= -`

warning: this looks like you are trying to use `.. *= ..`, but you really are doing `.. = (* ..)`
  --> $DIR/formatting.rs:86:6
   |
86 |     a =* &191;
   |      ^^^^
   |
   = note: #[warn(suspicious_assignment_formatting)] on by default
   = note: to remove this lint, use either `*=` or `= *`

warning: this looks like you are trying to use `.. != ..`, but you really are doing `.. = (! ..)`
  --> $DIR/formatting.rs:91:6
   |
91 |     b =! false;
   |      ^^^^
   |
   = note: #[warn(suspicious_assignment_formatting)] on by default
   = note: to remove this lint, use either `!=` or `= !`

warning: possibly missing a comma here
   --> $DIR/formatting.rs:102:19
    |
102 |         -1, -2, -3 // <= no coma here
    |                   ^
    |
    = note: #[warn(possible_missing_comma)] on by default
    = note: to remove this lint, add a comma or write the expr in a single line

warning: possibly missing a comma here
   --> $DIR/formatting.rs:108:19
    |
108 |         -1, -2, -3 // <= no coma here
    |                   ^
    |
    = note: #[warn(possible_missing_comma)] on by default
    = note: to remove this lint, add a comma or write the expr in a single line

warning: this let-binding has unit value. Consider omitting `let _ =`
  --> $DIR/formatting.rs:20:5
   |
20 |     let _ = { // if as the last expression
   |     ^
   |
   = note: #[warn(let_unit_value)] on by default

warning: this let-binding has unit value. Consider omitting `let _ =`
  --> $DIR/formatting.rs:32:5
   |
32 |     let _ = { // if in the middle of a block
   |     ^
   |
   = note: #[warn(let_unit_value)] on by default

