warning: operator precedence can trip the unwary
 --> $DIR/precedence.rs:8:5
  |
8 |     1 << 2 + 3;
  |     ^^^^^^^^^^
  |
  = note: #[warn(precedence)] on by default
help: consider parenthesizing your expression
  |     1 << (2 + 3);

warning: operator precedence can trip the unwary
  --> $DIR/precedence.rs:11:5
   |
11 |     1 + 2 << 3;
   |     ^^^^^^^^^^
   |
   = note: #[warn(precedence)] on by default
help: consider parenthesizing your expression
   |     (1 + 2) << 3;

warning: operator precedence can trip the unwary
  --> $DIR/precedence.rs:14:5
   |
14 |     4 >> 1 + 1;
   |     ^^^^^^^^^^
   |
   = note: #[warn(precedence)] on by default
help: consider parenthesizing your expression
   |     4 >> (1 + 1);

warning: operator precedence can trip the unwary
  --> $DIR/precedence.rs:17:5
   |
17 |     1 + 3 >> 2;
   |     ^^^^^^^^^^
   |
   = note: #[warn(precedence)] on by default
help: consider parenthesizing your expression
   |     (1 + 3) >> 2;

warning: operator precedence can trip the unwary
  --> $DIR/precedence.rs:20:5
   |
20 |     1 ^ 1 - 1;
   |     ^^^^^^^^^
   |
   = note: #[warn(precedence)] on by default
help: consider parenthesizing your expression
   |     1 ^ (1 - 1);

warning: operator precedence can trip the unwary
  --> $DIR/precedence.rs:23:5
   |
23 |     3 | 2 - 1;
   |     ^^^^^^^^^
   |
   = note: #[warn(precedence)] on by default
help: consider parenthesizing your expression
   |     3 | (2 - 1);

warning: operator precedence can trip the unwary
  --> $DIR/precedence.rs:26:5
   |
26 |     3 & 5 - 2;
   |     ^^^^^^^^^
   |
   = note: #[warn(precedence)] on by default
help: consider parenthesizing your expression
   |     3 & (5 - 2);

warning: unary minus has lower precedence than method call
  --> $DIR/precedence.rs:30:5
   |
30 |     -1i32.abs();
   |     ^^^^^^^^^^^
   |
   = note: #[warn(precedence)] on by default
help: consider adding parentheses to clarify your intent
   |     -(1i32.abs());

warning: unary minus has lower precedence than method call
  --> $DIR/precedence.rs:33:5
   |
33 |     -1f32.abs();
   |     ^^^^^^^^^^^
   |
   = note: #[warn(precedence)] on by default
help: consider adding parentheses to clarify your intent
   |     -(1f32.abs());

warning: statement with no effect
 --> $DIR/precedence.rs:8:5
  |
8 |     1 << 2 + 3;
  |     ^^^^^^^^^^^
  |
  = note: #[warn(no_effect)] on by default

warning: statement with no effect
  --> $DIR/precedence.rs:11:5
   |
11 |     1 + 2 << 3;
   |     ^^^^^^^^^^^
   |
   = note: #[warn(no_effect)] on by default

warning: statement with no effect
  --> $DIR/precedence.rs:14:5
   |
14 |     4 >> 1 + 1;
   |     ^^^^^^^^^^^
   |
   = note: #[warn(no_effect)] on by default

warning: statement with no effect
  --> $DIR/precedence.rs:17:5
   |
17 |     1 + 3 >> 2;
   |     ^^^^^^^^^^^
   |
   = note: #[warn(no_effect)] on by default

warning: statement with no effect
  --> $DIR/precedence.rs:20:5
   |
20 |     1 ^ 1 - 1;
   |     ^^^^^^^^^^
   |
   = note: #[warn(no_effect)] on by default

warning: statement with no effect
  --> $DIR/precedence.rs:23:5
   |
23 |     3 | 2 - 1;
   |     ^^^^^^^^^^
   |
   = note: #[warn(no_effect)] on by default

warning: statement with no effect
  --> $DIR/precedence.rs:26:5
   |
26 |     3 & 5 - 2;
   |     ^^^^^^^^^^
   |
   = note: #[warn(no_effect)] on by default

warning: statement can be reduced
  --> $DIR/precedence.rs:30:5
   |
30 |     -1i32.abs();
   |     ^^^^^^^^^^^^
   |
   = note: #[warn(unnecessary_operation)] on by default
help: replace it with
   |     1i32.abs();

warning: statement can be reduced
  --> $DIR/precedence.rs:33:5
   |
33 |     -1f32.abs();
   |     ^^^^^^^^^^^^
   |
   = note: #[warn(unnecessary_operation)] on by default
help: replace it with
   |     1f32.abs();

