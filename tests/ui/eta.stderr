warning: redundant closure found
 --> $DIR/eta.rs:7:27
  |
7 |     let a = Some(1u8).map(|a| foo(a));
  |                           ^^^^^^^^^^
  |
  = note: #[warn(redundant_closure)] on by default
help: remove closure as shown:
  |     let a = Some(1u8).map(foo);

warning: redundant closure found
  --> $DIR/eta.rs:11:10
   |
11 |     meta(|a| foo(a));
   |          ^^^^^^^^^^
   |
   = note: #[warn(redundant_closure)] on by default
help: remove closure as shown:
   |     meta(foo);

warning: redundant closure found
  --> $DIR/eta.rs:15:27
   |
15 |     let c = Some(1u8).map(|a| {1+2; foo}(a));
   |                           ^^^^^^^^^^^^^^^^^
   |
   = note: #[warn(redundant_closure)] on by default
help: remove closure as shown:
   |     let c = Some(1u8).map({1+2; foo});

warning: this expression borrows a reference that is immediately dereferenced by the compiler
  --> $DIR/eta.rs:20:21
   |
20 |     all(&[1, 2, 3], &&2, |x, y| below(x, y)); //is adjusted
   |                     ^^^
   |
   = note: #[warn(needless_borrow)] on by default

warning: redundant closure found
  --> $DIR/eta.rs:28:27
   |
28 |     let e = Some(1u8).map(|a| generic(a));
   |                           ^^^^^^^^^^^^^^
   |
   = note: #[warn(redundant_closure)] on by default
help: remove closure as shown:
   |     let e = Some(1u8).map(generic);

